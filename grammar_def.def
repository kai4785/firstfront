// [Meta-Language]
// White space is in just a delimiter
// ::=     is defined as
// |       alternative definition (regexp | )
// [ ]     optional, zero or one occurence (regexp ?)
// { }     zero or more occurrences (regexp *)
// ( )     grouping (regexp ))
// x       non-terminal symbol x
// "x"     terminal symbol x
// "\""    terminal symbol "
// ;       end of rule
// /*      start of comment
//  */     end of comment


[Comment]
comment ::= "//.*"; // Comment to the end of the line

[Tokens]
name ::= "^[a-z]+ ";
defined_as ::= "::=";
value ::= "[^\"\\]*(?:\\.[^\"\\]*)*";
eor ::= ";" ;
or ::= "|";

[Rule]
arg ::= (value | name);
optional_arg ::= "[" arg "]";
wildcard_arg ::= "{" arg "}";
grouped_args ::= "(" arg ")";
argument ::= arg | optional_arg | wildcard_arg | grouped_args { argument };
definition ::= argument {or argument};
rule ::= name defined_as definition eor;
